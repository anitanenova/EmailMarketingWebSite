<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Analysis" xml:space="preserve">
    <value>АNALYSE</value>
  </data>
  <data name="AutoMarketing" xml:space="preserve">
    <value>AUTOMATISER VOTRE MARKETING</value>
  </data>
  <data name="BetterEmail" xml:space="preserve">
    <value>ENVOYER MEILLEUR MAIL</value>
  </data>
  <data name="ComingFeature" xml:space="preserve">
    <value>À VENIR PROCHAINEMENT</value>
  </data>
  <data name="CreateProLetters" xml:space="preserve">
    <value>CRÉER DES LETTRES PROFESSIONNELLES</value>
  </data>
  <data name="InformedProgress" xml:space="preserve">
    <value>ÊTRE INFORMÉ DE NOS PROGRÈS</value>
  </data>
  <data name="MoreFromHydra" xml:space="preserve">
    <value>PLUS DE HYDRA</value>
  </data>
  <data name="SubscribeNewsletter" xml:space="preserve">
    <value>INSCRIVEZ-VOUS À NOTRE BULLETIN </value>
  </data>
  <data name="TextAnalysis" xml:space="preserve">
    <value>Profitez de notre page de statistiques qui vous fournira des rapports détaillés sur les taux d’ouverture, de remise, de clics et autres types de marketing par la poste.</value>
  </data>
  <data name="TextAutoMarketing" xml:space="preserve">
    <value>Personnalisez automatiquement vos campagnes en fonction d’intérêts, de comportements ou d’autres informations recueillies sur vos groupes cibles. Profitez d'une interface simple et conviviale pour configurer votre automatisation et pouvoir élaborer des stratégies marketing plus complexes avec nos services.</value>
  </data>
  <data name="TextBetterEmail" xml:space="preserve">
    <value>Livraison rapide et fiable de vos mails à travers le monde. Nous garantissons un taux de livraison de 80 courriers par seconde aux boîtes aux lettres de vos listes de clients à des prix abordables. Nous avons des forfaits adaptés à tous les types d'entreprises - grandes, petites et même des startups!</value>
  </data>
  <data name="TextComingFeature" xml:space="preserve">
    <value>Intégration avec Facebook pour optimiser une campagne pour les abonnements à la newsletter et les leads. Vous n'avez pas encore de liste de clients ou de prospects solides? Construisez une liste des abonnés à la newsletter et / ou des prospects qui recevront vos lettres de marketing via la plate-forme de publicité Facebook.</value>
  </data>
  <data name="TextCreateProLetters" xml:space="preserve">
    <value>Utilisez un constructeur de lettres pour créer des lettres professionnelles avec un beau design personnalisé. Enregistrez des modèles personnalisés ou faites votre choix dans une liste de modèles par défaut, que vous pouvez également personnaliser. Chaque modèle est compatible avec les clients de messagerie les plus populaires.</value>
  </data>
  <data name="TextMoreFromHydra" xml:space="preserve">
    <value>Bientôt des modules plus fonctionnels d'hydra pour aider votre entreprise à se développer. Nous envisageons de développer des modules dans des départements tels que la gestion, les ventes et le marketing afin de faciliter vos opérations commerciales et vos clients.</value>
  </data>
  <data name="TextUserFriendlyAccessible" xml:space="preserve">
    <value>La plate-forme est facile à utiliser et accessible afin que vous puissiez en faire l'expérience. Nous avons spécialement préparé pour vous des forfaits uniques et flexibles qui vous permettront de faire l'expérience de notre service sans obligation de souscription à long terme ni autre obligation à long terme.</value>
  </data>
  <data name="UserFriendlyAccessible" xml:space="preserve">
    <value>FACILE ET ACCESSIBLE AUX UTILISATEURS</value>
  </data>
</root>