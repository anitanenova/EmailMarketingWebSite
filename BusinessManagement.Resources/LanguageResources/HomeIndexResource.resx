<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Analysis" xml:space="preserve">
    <value>ANALYSIS</value>
  </data>
  <data name="AutoMarketing" xml:space="preserve">
    <value>AUTOMATE YOUR MARKETING</value>
  </data>
  <data name="BetterEmail" xml:space="preserve">
    <value>SEND BETTER EMAIL</value>
  </data>
  <data name="ComingFeature" xml:space="preserve">
    <value>COMING SOON FEATURE</value>
  </data>
  <data name="CreateProLetters" xml:space="preserve">
    <value>CREATE PROFESSIONAL LETTERS</value>
  </data>
  <data name="InformedProgress" xml:space="preserve">
    <value>BE INFORMED ABOUT OUR PROGRESS</value>
  </data>
  <data name="MoreFromHydra" xml:space="preserve">
    <value>MORE FROM HYDRA</value>
  </data>
  <data name="SubscribeNewsletter" xml:space="preserve">
    <value>SUBSCRIBE FOR OUR NEWSLETTER</value>
  </data>
  <data name="TextAnalysis" xml:space="preserve">
    <value>Take advantage of our statistics page that will give you detailed reports on open, delivery, click-through and other types of mail marketing rates.</value>
  </data>
  <data name="TextAutoMarketing" xml:space="preserve">
    <value>Customize you campaigns automatically based on interests, behavior or other gathered information about your target groups. Enjoy easy, user-friendly interface to configure your automation and be able to build more complex marketing strategies with our services.</value>
  </data>
  <data name="TextBetterEmail" xml:space="preserve">
    <value>Fast and reliable delivery of your mails across the world. We guarantee a delivery rate of 80 mails per second to the mailboxes of your customer lists on affordable prices. We have packages suitable for all types of businesses i.e. big, small and even startups!</value>
  </data>
  <data name="TextComingFeature" xml:space="preserve">
    <value>Integration with Facebook to optimize a campaign for newsletter subscriptions and leads. You do not have a solid customer’s list or leads, yet? Build a list of newsletter subscribers and/or leads that will receive your marketing letters using the Facebook ads platform.</value>
  </data>
  <data name="TextCreateProLetters" xml:space="preserve">
    <value>Use a letter builder to create professional letters with beautiful custom design. Save custom designs or choose from a list of some default templates, which can be customized as well. Each and every design is compatible with the most popular mail clients.</value>
  </data>
  <data name="TextMoreFromHydra" xml:space="preserve">
    <value>Coming soon more functional modules from hydra to help your business grow. We are considering to develop modules in departments such as management, sales and marketing so that we can ease your business operations and you customers as well.</value>
  </data>
  <data name="TextUserFriendlyAccessible" xml:space="preserve">
    <value>The platform is easy to use and accessible so that you can experience it firsthand. We prepared especially for you one-time-purchase and flexible packages that will allow you to experience our service without any long-term subscription bindings or any other long-term obligations at all.</value>
  </data>
  <data name="UserFriendlyAccessible" xml:space="preserve">
    <value>USER FRIENDLY AND ACCESSIBLE</value>
  </data>
</root>