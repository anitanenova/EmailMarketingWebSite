<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Automation" xml:space="preserve">
    <value>Автоматизация</value>
  </data>
  <data name="Bilder" xml:space="preserve">
    <value>Създай изглед</value>
  </data>
  <data name="CovPicReq" xml:space="preserve">
    <value>Полето Снимка на корицата е задължително!</value>
  </data>
  <data name="CovVidReq" xml:space="preserve">
    <value>Полето Видео на корицата YouTube Линк е задължително!</value>
  </data>
  <data name="Draft" xml:space="preserve">
    <value>Чернова</value>
  </data>
  <data name="Inactive" xml:space="preserve">
    <value>Неактивен</value>
  </data>
  <data name="MailM" xml:space="preserve">
    <value>Имейл Маркетинг</value>
  </data>
  <data name="NoProduct" xml:space="preserve">
    <value>Няма продукт</value>
  </data>
  <data name="OtherPosts" xml:space="preserve">
    <value>Други постове</value>
  </data>
  <data name="SimilarPosts" xml:space="preserve">
    <value>Подобни постове</value>
  </data>
  <data name="SMSM" xml:space="preserve">
    <value>SMS Маркетинг</value>
  </data>
  <data name="Visible" xml:space="preserve">
    <value>Видим</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Добави</value>
  </data>
  <data name="AddTag" xml:space="preserve">
    <value>Добавяне на нов таг</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>Всички</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Затвори</value>
  </data>
  <data name="CovPic" xml:space="preserve">
    <value>Снимка на корицата:</value>
  </data>
  <data name="CovVidLink" xml:space="preserve">
    <value>Видео на корицата YouTube Линк:</value>
  </data>
  <data name="Deac" xml:space="preserve">
    <value>Дезактивирай</value>
  </data>
  <data name="DeactPost" xml:space="preserve">
    <value>Дезактивиране на пост</value>
  </data>
  <data name="DeactPostQuestion" xml:space="preserve">
    <value>Желаете ли да дезактивирате пост</value>
  </data>
  <data name="Drafts" xml:space="preserve">
    <value>Чернови</value>
  </data>
  <data name="EditPost" xml:space="preserve">
    <value>Редактиране на Блог Пост</value>
  </data>
  <data name="ErrOcc" xml:space="preserve">
    <value>Възникна грешка моля опитайте отново.</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Грешка:</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>Избор на файл</value>
  </data>
  <data name="FileType" xml:space="preserve">
    <value>Разрешени типове данни: .jpg, .bmp, .png, .jpeg файл</value>
  </data>
  <data name="FullTxt" xml:space="preserve">
    <value>Пълен текст:</value>
  </data>
  <data name="FullTxtReq" xml:space="preserve">
    <value>Полето Пълен текст е задължително</value>
  </data>
  <data name="Headline" xml:space="preserve">
    <value>Заглавие:</value>
  </data>
  <data name="HeadlineReq" xml:space="preserve">
    <value>Полето Заглавие е задължително</value>
  </data>
  <data name="MorInfoMorSuccess" xml:space="preserve">
    <value>Повече информация, по-голям успех</value>
  </data>
  <data name="NewPost" xml:space="preserve">
    <value>Създаване на нов Блог Пост</value>
  </data>
  <data name="NoResults" xml:space="preserve">
    <value>Няма резултати!</value>
  </data>
  <data name="NotSelect" xml:space="preserve">
    <value>Не е избрано…</value>
  </data>
  <data name="PicTypeSel" xml:space="preserve">
    <value>Моля изберете картинка от разрешените типове</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Продукт:</value>
  </data>
  <data name="ProductReq" xml:space="preserve">
    <value>Полето Продукт е задължително</value>
  </data>
  <data name="PubDate" xml:space="preserve">
    <value>Публикувано на (дата):</value>
  </data>
  <data name="PubDateReq" xml:space="preserve">
    <value>Полето Публикувано на (дата) е задължително</value>
  </data>
  <data name="RemovePic" xml:space="preserve">
    <value>Премахнете качената картинка</value>
  </data>
  <data name="SearchTxt" xml:space="preserve">
    <value>Търсене на текст</value>
  </data>
  <data name="ShortTxt" xml:space="preserve">
    <value>Кратък текст:</value>
  </data>
  <data name="ShortTxtReq" xml:space="preserve">
    <value>Полето Кратък текст е задължително</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Статус:</value>
  </data>
  <data name="StatusReq" xml:space="preserve">
    <value>Полето Статус е задължително</value>
  </data>
  <data name="TagName" xml:space="preserve">
    <value>Име на тага:</value>
  </data>
  <data name="TagReq" xml:space="preserve">
    <value>Полето Таг е задължително</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Етикети</value>
  </data>
  <data name="TagSearch" xml:space="preserve">
    <value>Търсене на тагове</value>
  </data>
  <data name="TagSelectReq" xml:space="preserve">
    <value>Поне един таг трябва да бъде избран</value>
  </data>
  <data name="TxtListPost" xml:space="preserve">
    <value>Този текст се визуализира при списъка с всички постове</value>
  </data>
  <data name="TxtPostOpen" xml:space="preserve">
    <value>Този текст се визуализира когато е отворен конкретен пост</value>
  </data>
  <data name="VisibleInTime" xml:space="preserve">
    <value>Видими след време</value>
  </data>
  <data name="VisibleNow" xml:space="preserve">
    <value>Видими сега</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Обратно</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Дубликат</value>
  </data>
  <data name="LearnMore" xml:space="preserve">
    <value>Научете повече</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Запази</value>
  </data>
</root>